# Generated by Django 4.2.5 on 2024-06-22 19:28

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'city',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Степень образования',
                'verbose_name_plural': 'Степени образования',
                'db_table': 'grade',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Spec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
                'db_table': 'spec',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(blank=True, max_length=32, null=True, verbose_name='Телеграм')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], default='M', verbose_name='Пол')),
                ('role', models.CharField(choices=[('candidate', 'Соискатель'), ('hr', 'HR')], max_length=32)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='system.city', verbose_name='Город')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.grade', verbose_name='Уровень образования')),
                ('job_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_city', to='system.city', verbose_name='Город поиска работы')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'customer',
                'ordering': ('id',),
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidates',
            fields=[
            ],
            options={
                'verbose_name': 'Соискатель',
                'verbose_name_plural': 'Соискатели',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('system.customer',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HR',
            fields=[
            ],
            options={
                'verbose_name': 'HR',
                'verbose_name_plural': 'HRs',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('system.customer',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
